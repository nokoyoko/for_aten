name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  # 1) Basic Python env sanity: can we install deps?
  python-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Optional quick syntax/import check (without adding test files)
      - name: Compile source (syntax check)
        run: python -m compileall -q src

  # 2) Build the Docker image and run a smoke test
  docker-build-and-smoke:
    runs-on: ubuntu-latest
    needs: python-setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false              # weâ€™re just testing build; no push
          load: true
          tags: app:ci

      - name: Run container
        run: |
          docker run -d --rm -p 8000:8000 --name app app:ci
          # wait for the server to boot (simple retry loop)
          for i in {1..20}; do
            if curl -fsS http://localhost:8000/ >/dev/null; then
              echo "App is up!"
              exit 0
            fi
            sleep 0.5
          done
          echo "App failed to start in time" >&2
          docker logs app || true
          exit 1

      - name: Smoke test root endpoint
        run: |
          curl -fsS http://localhost:8000/ | tee /tmp/root.txt
          grep -q "Hello World!" /tmp/root.txt

      - name: install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: add records, migrate, and flush test
        run: |
          set -euo pipefail

          record_1='{ "device_id": "dev-1", "timestamp": "2025-09-09T17:00:00Z", "data_payload": { "gene_count": 12, "sample_quality": 0.98 }}'
          record_2='{ "device_id": "dev-2", "timestamp": "2025-09-09T17:00:01Z", "data_payload": { "gene_count": 13, "sample_quality": 0.99 }}'
          
          curl -fsS -X POST http://localhost:8000/ingest -H 'Content-Type: application/json' -d "$record_1" > /dev/null
          curl -fsS -X POST http://localhost:8000/ingest -H 'Content-Type: application/json' -d "$record_2" > /dev/null
          
          sleep 0.5

          records_count=$(curl -fsS http://localhost:8000/records | jq 'length')
          buffer_count=$(curl -fsS http://localhost:8000/check-buffer | jq 'length')

          echo "records_count=${records_count} buffer_count=${buffer_count}"

          if [ "$records_count" -ne 2]; then
            echo "[ERROR]: Expected two records in master DB, got $records_count"; exit 1
          fi
          if [ "$buffer_count" -ne 0]; then
            echo "[ERROR]: Expected zero records in buffer DB, got $buffer_count"; exit 1
          fi

          echo "Merge verified (two in master, zero in buffer)"

      - name: Smoke test records endpoint
        run: |
          curl -fsS http://localhost:8000/records | jq . >/dev/null 2>&1 || true
          # It's OK if it's empty; just verifying we get valid JSON

      - name: Show container logs (on success too)
        if: always()
        run: docker logs app || true
      
